//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.6

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "room")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub room_id: String,
    pub room_name: Option<String>,
    #[sea_orm(column_type = "Decimal(Some((5, 0)))", nullable)]
    pub room_number: Option<Decimal>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::appointment::Entity")]
    Appointment,
    #[sea_orm(has_many = "super::room_appointment_type::Entity")]
    RoomAppointmentType,
}

impl Related<super::appointment::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Appointment.def()
    }
}

impl Related<super::room_appointment_type::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::RoomAppointmentType.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
