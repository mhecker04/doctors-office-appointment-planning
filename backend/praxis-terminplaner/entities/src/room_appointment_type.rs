//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.6

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "room_appointment_type")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub room_appointment_type_id: String,
    pub room_id: String,
    pub appointment_type_id: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::appointment_type::Entity",
        from = "Column::AppointmentTypeId",
        to = "super::appointment_type::Column::AppointmentTypeId",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    AppointmentType,
    #[sea_orm(
        belongs_to = "super::room::Entity",
        from = "Column::RoomId",
        to = "super::room::Column::RoomId",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Room,
}

impl Related<super::appointment_type::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::AppointmentType.def()
    }
}

impl Related<super::room::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Room.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
